/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.ds.xedit.jni;

public class IObservable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IObservable(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IObservable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        xeditJNI.delete_IObservable(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    xeditJNI.IObservable_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    xeditJNI.IObservable_change_ownership(this, swigCPtr, true);
  }

  public void addObserver(IObserver pObserver) {
    xeditJNI.IObservable_addObserver(swigCPtr, this, IObserver.getCPtr(pObserver), pObserver);
  }

  public void deleteObserver(IObserver pObserver) {
    xeditJNI.IObservable_deleteObserver(swigCPtr, this, IObserver.getCPtr(pObserver), pObserver);
  }

  public void deleteAllObservers() {
    xeditJNI.IObservable_deleteAllObservers(swigCPtr, this);
  }

  public int getObserverCount() {
    return xeditJNI.IObservable_getObserverCount(swigCPtr, this);
  }

  public IObserver getObserver(int index) {
    long cPtr = xeditJNI.IObservable_getObserver(swigCPtr, this, index);
    return (cPtr == 0) ? null : new IObserver(cPtr, false);
  }

  public void notifyAllObservers() {
    xeditJNI.IObservable_notifyAllObservers(swigCPtr, this);
  }

  public IObservable() {
    this(xeditJNI.new_IObservable(), true);
    xeditJNI.IObservable_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
