/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.ds.xedit.jni;

public class xeditJNI {
  public final static native int __ANDROID___get();
  public final static native void DateTime_nYear_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nYear_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nMonth_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nMonth_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nDay_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nDay_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nHour_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nHour_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nMinute_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nMinute_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nSecond_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nSecond_get(long jarg1, DateTime jarg1_);
  public final static native void DateTime_nMilsecond_set(long jarg1, DateTime jarg1_, int jarg2);
  public final static native int DateTime_nMilsecond_get(long jarg1, DateTime jarg1_);
  public final static native long new_DateTime();
  public final static native void delete_DateTime(long jarg1);
  public final static native long new_CStringHelper();
  public final static native void delete_CStringHelper(long jarg1);
  public final static native String CStringHelper_W2C(long jarg1, CStringHelper jarg1_, long jarg2);
  public final static native long CStringHelper_C2W(long jarg1, CStringHelper jarg1_, String jarg2);
  public final static native String CStringHelper_T2C(long jarg1, CStringHelper jarg1_, String jarg2);
  public final static native long CStringHelper_T2W(long jarg1, CStringHelper jarg1_, String jarg2);
  public final static native String CStringHelper_C2T(long jarg1, CStringHelper jarg1_, String jarg2);
  public final static native String CStringHelper_W2T(long jarg1, CStringHelper jarg1_, long jarg2);
  public final static native String AVSampleFormatToString(int jarg1);
  public final static native int AVSampleFormatFromString(String jarg1);
  public final static native long AVMakeRational(long jarg1, long jarg2);
  public final static native long AVRationalMultiply(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long AVRationalDivision(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long AVRationalScale(long jarg1, long jarg2, Rational jarg2_);
  public final static native long Rational_zero_get();
  public final static native void Rational_nNum_set(long jarg1, Rational jarg1_, long jarg2);
  public final static native long Rational_nNum_get(long jarg1, Rational jarg1_);
  public final static native void Rational_nDen_set(long jarg1, Rational jarg1_, long jarg2);
  public final static native long Rational_nDen_get(long jarg1, Rational jarg1_);
  public final static native long new_Rational__SWIG_0();
  public final static native long new_Rational__SWIG_1(long jarg1, long jarg2);
  public final static native long Rational_integerValue(long jarg1, Rational jarg1_);
  public final static native double Rational_doubleValue(long jarg1, Rational jarg1_);
  public final static native long Rational_absValue(long jarg1, Rational jarg1_);
  public final static native long Rational_reverseValue(long jarg1, Rational jarg1_);
  public final static native long Rational_add(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long Rational_subtract(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long Rational_multiply__SWIG_0(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long Rational_multiply__SWIG_1(long jarg1, Rational jarg1_, long jarg2);
  public final static native long Rational_divide__SWIG_0(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native long Rational_divide__SWIG_1(long jarg1, Rational jarg1_, long jarg2);
  public final static native void Rational_assign(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native void Rational_selfAdd(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native void Rational_selfSubtract(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native void Rational_selfMultiply(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native void Rational_selfDivide(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean Rational_isEqualTo(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean Rational_isLessThan(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean Rational_isLessThanOrEqual(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean Rational_isGreaterThan(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean Rational_isGreaterThanOrEqual(long jarg1, Rational jarg1_, long jarg2, Rational jarg2_);
  public final static native void delete_Rational(long jarg1);
  public final static native void BaseAVStream_nIndex_set(long jarg1, BaseAVStream jarg1_, int jarg2);
  public final static native int BaseAVStream_nIndex_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_nID_set(long jarg1, BaseAVStream jarg1_, int jarg2);
  public final static native int BaseAVStream_nID_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_nCodecTag_set(long jarg1, BaseAVStream jarg1_, int jarg2);
  public final static native int BaseAVStream_nCodecTag_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_nBitrate_set(long jarg1, BaseAVStream jarg1_, long jarg2);
  public final static native long BaseAVStream_nBitrate_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_eBitrateMode_set(long jarg1, BaseAVStream jarg1_, int jarg2);
  public final static native int BaseAVStream_eBitrateMode_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_eCodecID_set(long jarg1, BaseAVStream jarg1_, int jarg2);
  public final static native int BaseAVStream_eCodecID_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_rDuration_set(long jarg1, BaseAVStream jarg1_, long jarg2, Rational jarg2_);
  public final static native long BaseAVStream_rDuration_get(long jarg1, BaseAVStream jarg1_);
  public final static native void BaseAVStream_rTimebase_set(long jarg1, BaseAVStream jarg1_, long jarg2, Rational jarg2_);
  public final static native long BaseAVStream_rTimebase_get(long jarg1, BaseAVStream jarg1_);
  public final static native long new_BaseAVStream();
  public final static native void delete_BaseAVStream(long jarg1);
  public final static native void AudioStream_eSampleFmt_set(long jarg1, AudioStream jarg1_, int jarg2);
  public final static native int AudioStream_eSampleFmt_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_nSampleRate_set(long jarg1, AudioStream jarg1_, int jarg2);
  public final static native int AudioStream_nSampleRate_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_nBitsPerSample_set(long jarg1, AudioStream jarg1_, int jarg2);
  public final static native int AudioStream_nBitsPerSample_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_nChannels_set(long jarg1, AudioStream jarg1_, int jarg2);
  public final static native int AudioStream_nChannels_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_nChannelLayout_set(long jarg1, AudioStream jarg1_, int jarg2);
  public final static native int AudioStream_nChannelLayout_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_bLossless_set(long jarg1, AudioStream jarg1_, boolean jarg2);
  public final static native boolean AudioStream_bLossless_get(long jarg1, AudioStream jarg1_);
  public final static native void AudioStream_reserved_set(long jarg1, AudioStream jarg1_, String jarg2);
  public final static native String AudioStream_reserved_get(long jarg1, AudioStream jarg1_);
  public final static native long new_AudioStream();
  public final static native void delete_AudioStream(long jarg1);
  public final static native void VideoStream_ePixFmt_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_ePixFmt_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_nWidth_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_nWidth_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_nHeight_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_nHeight_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_rSAR_set(long jarg1, VideoStream jarg1_, long jarg2, Rational jarg2_);
  public final static native long VideoStream_rSAR_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_rDAR_set(long jarg1, VideoStream jarg1_, long jarg2, Rational jarg2_);
  public final static native long VideoStream_rDAR_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_eFrameRateMode_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_eFrameRateMode_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_rFrameRate_set(long jarg1, VideoStream jarg1_, long jarg2, Rational jarg2_);
  public final static native long VideoStream_rFrameRate_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_nFrameCount_set(long jarg1, VideoStream jarg1_, long jarg2);
  public final static native long VideoStream_nFrameCount_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_eStandard_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_eStandard_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_bInterlaced_set(long jarg1, VideoStream jarg1_, boolean jarg2);
  public final static native boolean VideoStream_bInterlaced_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_bTopFieldFirst_set(long jarg1, VideoStream jarg1_, boolean jarg2);
  public final static native boolean VideoStream_bTopFieldFirst_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_bLossless_set(long jarg1, VideoStream jarg1_, boolean jarg2);
  public final static native boolean VideoStream_bLossless_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_eProfile_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_eProfile_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_eLevel_set(long jarg1, VideoStream jarg1_, int jarg2);
  public final static native int VideoStream_eLevel_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_bHasBFrames_set(long jarg1, VideoStream jarg1_, boolean jarg2);
  public final static native boolean VideoStream_bHasBFrames_get(long jarg1, VideoStream jarg1_);
  public final static native void VideoStream_reserved_set(long jarg1, VideoStream jarg1_, String jarg2);
  public final static native String VideoStream_reserved_get(long jarg1, VideoStream jarg1_);
  public final static native long new_VideoStream();
  public final static native void delete_VideoStream(long jarg1);
  public final static native void AVMediaInfo_path_set(long jarg1, AVMediaInfo jarg1_, String jarg2);
  public final static native String AVMediaInfo_path_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_codec_set(long jarg1, AVMediaInfo jarg1_, String jarg2);
  public final static native String AVMediaInfo_codec_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_nFileSize_set(long jarg1, AVMediaInfo jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger AVMediaInfo_nFileSize_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_rDuration_set(long jarg1, AVMediaInfo jarg1_, long jarg2, Rational jarg2_);
  public final static native long AVMediaInfo_rDuration_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_eMuxerType_set(long jarg1, AVMediaInfo jarg1_, int jarg2);
  public final static native int AVMediaInfo_eMuxerType_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_nOverallBitrate_set(long jarg1, AVMediaInfo jarg1_, int jarg2);
  public final static native int AVMediaInfo_nOverallBitrate_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_nVideoCount_set(long jarg1, AVMediaInfo jarg1_, int jarg2);
  public final static native int AVMediaInfo_nVideoCount_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_vStreams_set(long jarg1, AVMediaInfo jarg1_, long[] jarg2);
  public final static native long[] AVMediaInfo_vStreams_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_nAudioCount_set(long jarg1, AVMediaInfo jarg1_, int jarg2);
  public final static native int AVMediaInfo_nAudioCount_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_aStreams_set(long jarg1, AVMediaInfo jarg1_, long[] jarg2);
  public final static native long[] AVMediaInfo_aStreams_get(long jarg1, AVMediaInfo jarg1_);
  public final static native void AVMediaInfo_reserved_set(long jarg1, AVMediaInfo jarg1_, String jarg2);
  public final static native String AVMediaInfo_reserved_get(long jarg1, AVMediaInfo jarg1_);
  public final static native long new_AVMediaInfo();
  public final static native void delete_AVMediaInfo(long jarg1);
  public final static native int AVCreateCondition__SWIG_0(long jarg1, String jarg2);
  public final static native int AVCreateCondition__SWIG_1(long jarg1);
  public final static native int AVCreateMutex(long jarg1);
  public final static native java.math.BigInteger AVGetCurrentTime();
  public final static native long AVGetCurrentDate();
  public final static native int AVGetCurrentClock();
  public final static native int AVClocksPerSecond();
  public final static native float AVClockToTime(int jarg1);
  public final static native int AVTimeToClock(float jarg1);
  public final static native void AVSleep(int jarg1);
  public final static native void AVSetLibDirectory(String jarg1);
  public final static native long AVLoadDynamicLib(String jarg1);
  public final static native long AVFindFunction(long jarg1, String jarg2);
  public final static native boolean AVFreeDynamicLib(long jarg1);
  public final static native void AVGetCurrentModulePath(String jarg1);
  public final static native long AVGetModuleHandle(String jarg1);
  public final static native void AVGetModulePath(long jarg1, String jarg2);
  public final static native long AVMemcopy(long jarg1, long jarg2, int jarg3);
  public final static native void AVTrace(String jarg1);
  public final static native int AVGetSampleBits(int jarg1);
  public final static native int AVGetCurrentProcessID();
  public final static native int AVGetCurrentThreadID();
  public final static native boolean AVHasAlphaChannel(int jarg1);
  public final static native int AVGetFillColor(int jarg1);
  public final static native int AVGetPlaneCount(int jarg1);
  public final static native boolean AVFileOrDirExist(String jarg1);
  public final static native int AVMakeDir(String jarg1);
  public final static native long AVGetFileModifyTime(String jarg1);
  public final static native boolean AVDumpBinary(String jarg1, long jarg2, int jarg3);
  public final static native int AVGetCPUCoreNumber();
  public final static native String AVGetSystemCodeString(long jarg1);
  public final static native long new_CAutoInitProxy__SWIG_0(long jarg1, long jarg2);
  public final static native long new_CAutoInitProxy__SWIG_1(long jarg1);
  public final static native void delete_CAutoInitProxy(long jarg1);
  public final static native long GCD(long jarg1, long jarg2);
  public final static native long LCM(long jarg1, long jarg2);
  public final static native long Scale(long jarg1, long jarg2, long jarg3);
  public final static native long AVMalloc(int jarg1);
  public final static native void AVFree(long jarg1);
  public final static native void Buffer_pData_set(long jarg1, Buffer jarg1_, long jarg2);
  public final static native long Buffer_pData_get(long jarg1, Buffer jarg1_);
  public final static native void Buffer_ui32Size_set(long jarg1, Buffer jarg1_, int jarg2);
  public final static native int Buffer_ui32Size_get(long jarg1, Buffer jarg1_);
  public final static native void Buffer_ui32Len_set(long jarg1, Buffer jarg1_, int jarg2);
  public final static native int Buffer_ui32Len_get(long jarg1, Buffer jarg1_);
  public final static native long new_Buffer__SWIG_0();
  public final static native long new_Buffer__SWIG_1(int jarg1);
  public final static native void delete_Buffer(long jarg1);
  public final static native void Buffer_Init(long jarg1, Buffer jarg1_, int jarg2);
  public final static native void delete_ICondition(long jarg1);
  public final static native int ICondition_Signal(long jarg1, ICondition jarg1_);
  public final static native int ICondition_Wait(long jarg1, ICondition jarg1_);
  public final static native int ICondition_WaitTimeout(long jarg1, ICondition jarg1_, int jarg2);
  public final static native void delete_IMutex(long jarg1);
  public final static native void IMutex_Lock(long jarg1, IMutex jarg1_);
  public final static native void IMutex_Unlock(long jarg1, IMutex jarg1_);
  public final static native void delete_ISemaphore(long jarg1);
  public final static native int ISemaphore_Increase(long jarg1, ISemaphore jarg1_);
  public final static native int ISemaphore_GetValue(long jarg1, ISemaphore jarg1_);
  public final static native int ISemaphore_Wait(long jarg1, ISemaphore jarg1_);
  public final static native int ISemaphore_WaitTimeout(long jarg1, ISemaphore jarg1_, int jarg2);
  public final static native void delete_IThread(long jarg1);
  public final static native int IThread_TStart(long jarg1, IThread jarg1_);
  public final static native int IThread_TStop(long jarg1, IThread jarg1_);
  public final static native int IThread_TSuspend(long jarg1, IThread jarg1_);
  public final static native int IThread_TResume(long jarg1, IThread jarg1_);
  public final static native int IThread_GetThreadStatus(long jarg1, IThread jarg1_);
  public final static native void delete_CThread(long jarg1);
  public final static native int CThread_TStart(long jarg1, CThread jarg1_);
  public final static native int CThread_TStop(long jarg1, CThread jarg1_);
  public final static native int CThread_TSuspend(long jarg1, CThread jarg1_);
  public final static native int CThread_TResume(long jarg1, CThread jarg1_);
  public final static native int CThread_GetThreadStatus(long jarg1, CThread jarg1_);
  public final static native void Description_shortDesc_set(long jarg1, Description jarg1_, String jarg2);
  public final static native String Description_shortDesc_get(long jarg1, Description jarg1_);
  public final static native void Description_longDesc_set(long jarg1, Description jarg1_, String jarg2);
  public final static native String Description_longDesc_get(long jarg1, Description jarg1_);
  public final static native long new_Description();
  public final static native void delete_Description(long jarg1);
  public final static native void delete_IAVGlobal(long jarg1);
  public final static native void IAVGlobal_AVSetLanguage(long jarg1, IAVGlobal jarg1_, int jarg2);
  public final static native int IAVGlobal_AVCodecGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVCodecEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVCodecGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native int IAVGlobal_AVMuxerGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVMuxerEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVMuxerGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native int IAVGlobal_AVPixelFormatGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVPixelFormatEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVPixelFormatGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native int IAVGlobal_AVBitrateModeGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVBitrateModeEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVBitrateModeGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native int IAVGlobal_AVStandardGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVStandardEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVStandardGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native int IAVGlobal_AVSampleFormatGetCount(long jarg1, IAVGlobal jarg1_);
  public final static native int IAVGlobal_AVSampleFormatEnumerate(long jarg1, IAVGlobal jarg1_, int[] jarg2, int jarg3, long jarg4);
  public final static native int IAVGlobal_AVSampleFormatGetDescription(long jarg1, IAVGlobal jarg1_, int jarg2, long jarg3, Description jarg3_);
  public final static native long AVGetGlobal();
  public final static native void delete_IPicture(long jarg1);
  public final static native int IPicture_Init(long jarg1, IPicture jarg1_, int jarg2, int jarg3, int jarg4, long[] jarg5);
  public final static native int IPicture_GetPixelFormat(long jarg1, IPicture jarg1_);
  public final static native int IPicture_GetPixelWidth(long jarg1, IPicture jarg1_);
  public final static native int IPicture_GetPixelHeight(long jarg1, IPicture jarg1_);
  public final static native long IPicture_GetPlaneData(long jarg1, IPicture jarg1_, int jarg2);
  public final static native long IPicture_GetPlanePitch(long jarg1, IPicture jarg1_, int jarg2);
  public final static native int IPicture_CopyFrom(long jarg1, IPicture jarg1_, long jarg2, IPicture jarg2_);
  public final static native int AVCreatePicture(IPicture jarg1);
  public final static native void delete_IFrame(long jarg1);
  public final static native int IFrame_GetFrameType(long jarg1, IFrame jarg1_);
  public final static native long IFrame_GetFramePts(long jarg1, IFrame jarg1_);
  public final static native int IFrame_CopyFrom(long jarg1, IFrame jarg1_, long jarg2, IFrame jarg2_);
  public final static native void IFrame_SetPts(long jarg1, IFrame jarg1_, long jarg2);
  public final static native void delete_IVFrame(long jarg1);
  public final static native boolean IVFrame_Interlaced(long jarg1, IVFrame jarg1_);
  public final static native boolean IVFrame_TopFieldFirst(long jarg1, IVFrame jarg1_);
  public final static native int IVFrame_GetPictureType(long jarg1, IVFrame jarg1_);
  public final static native boolean IVFrame_Telecined(long jarg1, IVFrame jarg1_);
  public final static native void IVFrame_SetInterlaced(long jarg1, IVFrame jarg1_, boolean jarg2);
  public final static native void IVFrame_SetTopFieldFirst(long jarg1, IVFrame jarg1_, boolean jarg2);
  public final static native void IVFrame_SetPictureType(long jarg1, IVFrame jarg1_, int jarg2);
  public final static native void IVFrame_SetTelecined(long jarg1, IVFrame jarg1_, boolean jarg2);
  public final static native void delete_IAFrame(long jarg1);
  public final static native int IAFrame_Init(long jarg1, IAFrame jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native int IAFrame_GetSampleFormat(long jarg1, IAFrame jarg1_);
  public final static native int IAFrame_GetSampleRate(long jarg1, IAFrame jarg1_);
  public final static native int IAFrame_GetChannels(long jarg1, IAFrame jarg1_);
  public final static native int IAFrame_GetBitsPerSample(long jarg1, IAFrame jarg1_);
  public final static native int IAFrame_GetSampleCount(long jarg1, IAFrame jarg1_);
  public final static native long IAFrame_GetSampleData(long jarg1, IAFrame jarg1_);
  public final static native int IAFrame_SetSampleCount(long jarg1, IAFrame jarg1_, int jarg2);
  public final static native int AVCreateFrame(int jarg1, IFrame jarg2);
  public final static native void delete_IPacket(long jarg1);
  public final static native long IPacket_GetStreamIndex(long jarg1, IPacket jarg1_);
  public final static native long IPacket_GetPts(long jarg1, IPacket jarg1_);
  public final static native long IPacket_GetDts(long jarg1, IPacket jarg1_);
  public final static native long IPacket_GetDataPtr(long jarg1, IPacket jarg1_);
  public final static native int IPacket_GetDataSize(long jarg1, IPacket jarg1_);
  public final static native int IPacket_GetDataLen(long jarg1, IPacket jarg1_);
  public final static native int IPacket_GetReadPos(long jarg1, IPacket jarg1_);
  public final static native long IPacket_GetReadPts(long jarg1, IPacket jarg1_);
  public final static native long IPacket_GetDuration(long jarg1, IPacket jarg1_);
  public final static native void IPacket_SetStreamIndex(long jarg1, IPacket jarg1_, long jarg2);
  public final static native void IPacket_SetPts(long jarg1, IPacket jarg1_, long jarg2);
  public final static native void IPacket_SetReadPts(long jarg1, IPacket jarg1_, long jarg2);
  public final static native void IPacket_SetReadPos(long jarg1, IPacket jarg1_, int jarg2);
  public final static native int IPacket_CopyFrom(long jarg1, IPacket jarg1_, long jarg2, IPacket jarg2_);
  public final static native int IPacket_Read(long jarg1, IPacket jarg1_, long jarg2, int jarg3);
  public final static native boolean IPacket_AllRead(long jarg1, IPacket jarg1_);
  public final static native void IPacket_Free(long jarg1, IPacket jarg1_);
  public final static native int AVCreatePacket(IPacket jarg1);
  public final static native void delete_IStream(long jarg1);
  public final static native int IStream_GetStreamType(long jarg1, IStream jarg1_);
  public final static native int AVCreateStream(IStream jarg1, int jarg2);
  public final static native void delete_InputStream(long jarg1);
  public final static native int InputStream_Read(long jarg1, InputStream jarg1_, long jarg2, int jarg3);
  public final static native int InputStream_Seek(long jarg1, InputStream jarg1_, long jarg2, int jarg3);
  public final static native boolean InputStream_EOFReached(long jarg1, InputStream jarg1_);
  public final static native void delete_IPacketStreamBase(long jarg1);
  public final static native int IPacketStreamBase_GetItem(long jarg1, IPacketStreamBase jarg1_, IPacket jarg2);
  public final static native void IPacketStreamBase_PopItem(long jarg1, IPacketStreamBase jarg1_);
  public final static native int IPacketStreamBase_GetItemCount(long jarg1, IPacketStreamBase jarg1_);
  public final static native void IPacketStreamBase_Reset(long jarg1, IPacketStreamBase jarg1_);
  public final static native void IPacketStreamBase_Extend(long jarg1, IPacketStreamBase jarg1_, int jarg2);
  public final static native void delete_IPictureStreamBase(long jarg1);
  public final static native int IPictureStreamBase_GetItem(long jarg1, IPictureStreamBase jarg1_, IPicture jarg2);
  public final static native void IPictureStreamBase_PopItem(long jarg1, IPictureStreamBase jarg1_);
  public final static native int IPictureStreamBase_GetItemCount(long jarg1, IPictureStreamBase jarg1_);
  public final static native void IPictureStreamBase_Reset(long jarg1, IPictureStreamBase jarg1_);
  public final static native void IPictureStreamBase_Extend(long jarg1, IPictureStreamBase jarg1_, int jarg2);
  public final static native void delete_IFrameStreamBase(long jarg1);
  public final static native int IFrameStreamBase_GetItem(long jarg1, IFrameStreamBase jarg1_, IFrame jarg2);
  public final static native void IFrameStreamBase_PopItem(long jarg1, IFrameStreamBase jarg1_);
  public final static native int IFrameStreamBase_GetItemCount(long jarg1, IFrameStreamBase jarg1_);
  public final static native void IFrameStreamBase_Reset(long jarg1, IFrameStreamBase jarg1_);
  public final static native void IFrameStreamBase_Extend(long jarg1, IFrameStreamBase jarg1_, int jarg2);
  public final static native void delete_IPacketStream(long jarg1);
  public final static native int IPacketStream_GetStreamIndex(long jarg1, IPacketStream jarg1_);
  public final static native long IPacketStream_GetTimebase(long jarg1, IPacketStream jarg1_);
  public final static native long IPacketStream_GetFrameRate(long jarg1, IPacketStream jarg1_);
  public final static native void delete_IFrameStream(long jarg1);
  public final static native long IFrameStream_GetTimebase(long jarg1, IFrameStream jarg1_);
  public final static native long IFrameStream_GetFrameRate(long jarg1, IFrameStream jarg1_);
  public final static native void delete_IPictureStream(long jarg1);
  public final static native void delete_ILogReceiver(long jarg1);
  public final static native void ILogReceiver_Receive(long jarg1, ILogReceiver jarg1_, int jarg2, String jarg3);
  public final static native void ILogReceiver_director_connect(ILogReceiver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ILogReceiver_change_ownership(ILogReceiver obj, long cptr, boolean take_or_release);
  public final static native void AVLogAddReceiver(long jarg1, ILogReceiver jarg1_);
  public final static native void AVLogRemoveReceiver(long jarg1, ILogReceiver jarg1_);
  public final static native void AVLogSetLevel(int jarg1);
  public final static native int AVLogGetLevel();
  public final static native void AVLOG(int jarg1, String jarg2);
  public final static native void AVLOGS(int jarg1, int jarg2, String jarg3);
  public final static native int AVCreateLogReceiver(ILogReceiver jarg1);
  public final static native void RC_AddRef(long jarg1, RC jarg1_);
  public final static native int RC_Release(long jarg1, RC jarg1_);
  public final static native long new_RC();
  public final static native void delete_RC(long jarg1);
  public final static native void GSize_nWidth_set(long jarg1, GSize jarg1_, int jarg2);
  public final static native int GSize_nWidth_get(long jarg1, GSize jarg1_);
  public final static native void GSize_nHeight_set(long jarg1, GSize jarg1_, int jarg2);
  public final static native int GSize_nHeight_get(long jarg1, GSize jarg1_);
  public final static native long new_GSize__SWIG_0();
  public final static native long new_GSize__SWIG_1(int jarg1, int jarg2);
  public final static native void delete_GSize(long jarg1);
  public final static native void delete_IBuffer(long jarg1);
  public final static native int IBuffer_getType(long jarg1, IBuffer jarg1_);
  public final static native long new_IBuffer();
  public final static native void IBuffer_director_connect(IBuffer obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IBuffer_change_ownership(IBuffer obj, long cptr, boolean take_or_release);
  public final static native void delete_IVideoBuffer(long jarg1);
  public final static native long IVideoBuffer_getVideoRect(long jarg1, IVideoBuffer jarg1_);
  public final static native int IVideoBuffer_getPixelFormat(long jarg1, IVideoBuffer jarg1_);
  public final static native int IVideoBuffer_getLocation(long jarg1, IVideoBuffer jarg1_);
  public final static native int IVideoBuffer_getPlaneCount(long jarg1, IVideoBuffer jarg1_);
  public final static native long IVideoBuffer_getPlanePointer(long jarg1, IVideoBuffer jarg1_, int jarg2);
  public final static native int IVideoBuffer_getPlaneLineSize(long jarg1, IVideoBuffer jarg1_, int jarg2);
  public final static native int IVideoBuffer_getSize(long jarg1, IVideoBuffer jarg1_, int jarg2);
  public final static native long new_IVideoBuffer();
  public final static native void IVideoBuffer_director_connect(IVideoBuffer obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IVideoBuffer_change_ownership(IVideoBuffer obj, long cptr, boolean take_or_release);
  public final static native void delete_IRenderer(long jarg1);
  public final static native int IRenderer_render(long jarg1, IRenderer jarg1_, long jarg2, IBuffer jarg2_);
  public final static native long new_IRenderer();
  public final static native void IRenderer_director_connect(IRenderer obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IRenderer_change_ownership(IRenderer obj, long cptr, boolean take_or_release);
  public final static native void delete_IVideoRenderer(long jarg1);
  public final static native int IVideoRenderer_init(long jarg1, IVideoRenderer jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native long new_IVideoRenderer();
  public final static native void IVideoRenderer_director_connect(IVideoRenderer obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IVideoRenderer_change_ownership(IVideoRenderer obj, long cptr, boolean take_or_release);
  public final static native void delete_IAudioRenderer(long jarg1);
  public final static native int IAudioRenderer_init(long jarg1, IAudioRenderer jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long new_IAudioRenderer();
  public final static native void IAudioRenderer_director_connect(IAudioRenderer obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IAudioRenderer_change_ownership(IAudioRenderer obj, long cptr, boolean take_or_release);
  public final static native void delete_IInputStream(long jarg1);
  public final static native int IInputStream_read(long jarg1, IInputStream jarg1_, long jarg2, int jarg3);
  public final static native long IInputStream_seek(long jarg1, IInputStream jarg1_, long jarg2);
  public final static native long IInputStream_available(long jarg1, IInputStream jarg1_);
  public final static native long IInputStream_skip(long jarg1, IInputStream jarg1_, long jarg2);
  public final static native int IInputStream_close(long jarg1, IInputStream jarg1_);
  public final static native long new_IInputStream();
  public final static native void IInputStream_director_connect(IInputStream obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IInputStream_change_ownership(IInputStream obj, long cptr, boolean take_or_release);
  public final static native void delete_IObserver(long jarg1);
  public final static native long new_IObserver();
  public final static native void IObserver_director_connect(IObserver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IObserver_change_ownership(IObserver obj, long cptr, boolean take_or_release);
  public final static native void delete_IObservable(long jarg1);
  public final static native void IObservable_addObserver(long jarg1, IObservable jarg1_, long jarg2, IObserver jarg2_);
  public final static native void IObservable_deleteObserver(long jarg1, IObservable jarg1_, long jarg2, IObserver jarg2_);
  public final static native void IObservable_deleteAllObservers(long jarg1, IObservable jarg1_);
  public final static native int IObservable_getObserverCount(long jarg1, IObservable jarg1_);
  public final static native long IObservable_getObserver(long jarg1, IObservable jarg1_, int jarg2);
  public final static native void IObservable_notifyAllObservers(long jarg1, IObservable jarg1_);
  public final static native long new_IObservable();
  public final static native void IObservable_director_connect(IObservable obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IObservable_change_ownership(IObservable obj, long cptr, boolean take_or_release);
  public final static native void delete_IOutputStream(long jarg1);
  public final static native int IOutputStream_write(long jarg1, IOutputStream jarg1_, long jarg2, int jarg3);
  public final static native int IOutputStream_flush(long jarg1, IOutputStream jarg1_);
  public final static native int IOutputStream_close(long jarg1, IOutputStream jarg1_);
  public final static native long IOutputStream_seek(long jarg1, IOutputStream jarg1_, long jarg2);
  public final static native long new_IOutputStream();
  public final static native void IOutputStream_director_connect(IOutputStream obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IOutputStream_change_ownership(IOutputStream obj, long cptr, boolean take_or_release);
  public final static native long idGenerateOne();
  public final static native long new_CInputStream();
  public final static native void delete_CInputStream(long jarg1);
  public final static native int CInputStream_open(long jarg1, CInputStream jarg1_, String jarg2);
  public final static native int CInputStream_read(long jarg1, CInputStream jarg1_, long jarg2, int jarg3);
  public final static native long CInputStream_seek(long jarg1, CInputStream jarg1_, long jarg2);
  public final static native long CInputStream_available(long jarg1, CInputStream jarg1_);
  public final static native long CInputStream_skip(long jarg1, CInputStream jarg1_, long jarg2);
  public final static native int CInputStream_close(long jarg1, CInputStream jarg1_);
  public final static native long new_COutputFileStream();
  public final static native void delete_COutputFileStream(long jarg1);
  public final static native int COutputFileStream_open(long jarg1, COutputFileStream jarg1_, String jarg2);
  public final static native int COutputFileStream_write(long jarg1, COutputFileStream jarg1_, long jarg2, int jarg3);
  public final static native int COutputFileStream_flush(long jarg1, COutputFileStream jarg1_);
  public final static native int COutputFileStream_close(long jarg1, COutputFileStream jarg1_);
  public final static native long COutputFileStream_seek(long jarg1, COutputFileStream jarg1_, long jarg2);
  public final static native void delete_IDictionary(long jarg1);
  public final static native void IDictionary_set(long jarg1, IDictionary jarg1_, String jarg2, String jarg3);
  public final static native boolean IDictionary_contains(long jarg1, IDictionary jarg1_, String jarg2);
  public final static native String IDictionary_get(long jarg1, IDictionary jarg1_, String jarg2);
  public final static native void IDictionary_remove(long jarg1, IDictionary jarg1_, String jarg2);
  public final static native long createDictionary();
  public final static native void Image_type_set(long jarg1, Image jarg1_, int jarg2);
  public final static native int Image_type_get(long jarg1, Image jarg1_);
  public final static native void Image_path_set(long jarg1, Image jarg1_, String jarg2);
  public final static native String Image_path_get(long jarg1, Image jarg1_);
  public final static native void Image_size_set(long jarg1, Image jarg1_, long jarg2, GSize jarg2_);
  public final static native long Image_size_get(long jarg1, Image jarg1_);
  public final static native long new_Image();
  public final static native void delete_Image(long jarg1);
  public final static native int xSaveImage(String jarg1, long jarg2, int jarg3, int jarg4, int jarg5, long jarg6, GSize jarg6_, long jarg7, GSize jarg7_, int jarg8);
  public final static native int xScaleImage__SWIG_0(String jarg1, String jarg2, long jarg3, GSize jarg3_, int jarg4);
  public final static native int xScaleImage__SWIG_1(String jarg1, String jarg2, long jarg3, GSize jarg3_);
  public final static native long new_IDPtr();
  public final static native void delete_IDPtr(long jarg1);
  public final static native void IDPtr_assign(long jarg1, IDPtr jarg1_, long jarg2);
  public final static native long IDPtr_value(long jarg1, IDPtr jarg1_);
  public final static native long IDPtr_cast(long jarg1, IDPtr jarg1_);
  public final static native long IDPtr_frompointer(long jarg1);
  public final static native void CodecParam_eCodecID_set(long jarg1, CodecParam jarg1_, int jarg2);
  public final static native int CodecParam_eCodecID_get(long jarg1, CodecParam jarg1_);
  public final static native void CodecParam_eCodecProfile_set(long jarg1, CodecParam jarg1_, int jarg2);
  public final static native int CodecParam_eCodecProfile_get(long jarg1, CodecParam jarg1_);
  public final static native void CodecParam_eCodecLevel_set(long jarg1, CodecParam jarg1_, int jarg2);
  public final static native int CodecParam_eCodecLevel_get(long jarg1, CodecParam jarg1_);
  public final static native void CodecParam_eBitrateMode_set(long jarg1, CodecParam jarg1_, int jarg2);
  public final static native int CodecParam_eBitrateMode_get(long jarg1, CodecParam jarg1_);
  public final static native void CodecParam_nBitrate_set(long jarg1, CodecParam jarg1_, int jarg2);
  public final static native int CodecParam_nBitrate_get(long jarg1, CodecParam jarg1_);
  public final static native void CodecParam_reserved_set(long jarg1, CodecParam jarg1_, short[] jarg2);
  public final static native short[] CodecParam_reserved_get(long jarg1, CodecParam jarg1_);
  public final static native long new_CodecParam();
  public final static native void delete_CodecParam(long jarg1);
  public final static native void VideoCodecParam_ePixFormat_set(long jarg1, VideoCodecParam jarg1_, int jarg2);
  public final static native int VideoCodecParam_ePixFormat_get(long jarg1, VideoCodecParam jarg1_);
  public final static native void VideoCodecParam_nWidth_set(long jarg1, VideoCodecParam jarg1_, int jarg2);
  public final static native int VideoCodecParam_nWidth_get(long jarg1, VideoCodecParam jarg1_);
  public final static native void VideoCodecParam_nHeight_set(long jarg1, VideoCodecParam jarg1_, int jarg2);
  public final static native int VideoCodecParam_nHeight_get(long jarg1, VideoCodecParam jarg1_);
  public final static native void VideoCodecParam_bInterlaced_set(long jarg1, VideoCodecParam jarg1_, boolean jarg2);
  public final static native boolean VideoCodecParam_bInterlaced_get(long jarg1, VideoCodecParam jarg1_);
  public final static native void VideoCodecParam_bTopFieldFirst_set(long jarg1, VideoCodecParam jarg1_, boolean jarg2);
  public final static native boolean VideoCodecParam_bTopFieldFirst_get(long jarg1, VideoCodecParam jarg1_);
  public final static native void VideoCodecParam_reserved_set(long jarg1, VideoCodecParam jarg1_, short[] jarg2);
  public final static native short[] VideoCodecParam_reserved_get(long jarg1, VideoCodecParam jarg1_);
  public final static native long new_VideoCodecParam();
  public final static native void delete_VideoCodecParam(long jarg1);
  public final static native void AudioCodecParam_eSampleFmt_set(long jarg1, AudioCodecParam jarg1_, int jarg2);
  public final static native int AudioCodecParam_eSampleFmt_get(long jarg1, AudioCodecParam jarg1_);
  public final static native void AudioCodecParam_nSampleRate_set(long jarg1, AudioCodecParam jarg1_, int jarg2);
  public final static native int AudioCodecParam_nSampleRate_get(long jarg1, AudioCodecParam jarg1_);
  public final static native void AudioCodecParam_nBitsPerSample_set(long jarg1, AudioCodecParam jarg1_, int jarg2);
  public final static native int AudioCodecParam_nBitsPerSample_get(long jarg1, AudioCodecParam jarg1_);
  public final static native void AudioCodecParam_nChannels_set(long jarg1, AudioCodecParam jarg1_, int jarg2);
  public final static native int AudioCodecParam_nChannels_get(long jarg1, AudioCodecParam jarg1_);
  public final static native void AudioCodecParam_reserved_set(long jarg1, AudioCodecParam jarg1_, short[] jarg2);
  public final static native short[] AudioCodecParam_reserved_get(long jarg1, AudioCodecParam jarg1_);
  public final static native long new_AudioCodecParam();
  public final static native void delete_AudioCodecParam(long jarg1);
  public final static native void EncodeParam_eMuxerType_set(long jarg1, EncodeParam jarg1_, int jarg2);
  public final static native int EncodeParam_eMuxerType_get(long jarg1, EncodeParam jarg1_);
  public final static native void EncodeParam_videoParam_set(long jarg1, EncodeParam jarg1_, long jarg2, VideoCodecParam jarg2_);
  public final static native long EncodeParam_videoParam_get(long jarg1, EncodeParam jarg1_);
  public final static native void EncodeParam_audioParam_set(long jarg1, EncodeParam jarg1_, long jarg2, AudioCodecParam jarg2_);
  public final static native long EncodeParam_audioParam_get(long jarg1, EncodeParam jarg1_);
  public final static native void EncodeParam_reserved_set(long jarg1, EncodeParam jarg1_, short[] jarg2);
  public final static native short[] EncodeParam_reserved_get(long jarg1, EncodeParam jarg1_);
  public final static native long new_EncodeParam();
  public final static native void delete_EncodeParam(long jarg1);
  public final static native void GenerateSetting_strDestDir_set(long jarg1, GenerateSetting jarg1_, String jarg2);
  public final static native String GenerateSetting_strDestDir_get(long jarg1, GenerateSetting jarg1_);
  public final static native void GenerateSetting_strDestName_set(long jarg1, GenerateSetting jarg1_, String jarg2);
  public final static native String GenerateSetting_strDestName_get(long jarg1, GenerateSetting jarg1_);
  public final static native void GenerateSetting_encodeParam_set(long jarg1, GenerateSetting jarg1_, long jarg2, EncodeParam jarg2_);
  public final static native long GenerateSetting_encodeParam_get(long jarg1, GenerateSetting jarg1_);
  public final static native void GenerateSetting_rStartTime_set(long jarg1, GenerateSetting jarg1_, long jarg2, Rational jarg2_);
  public final static native long GenerateSetting_rStartTime_get(long jarg1, GenerateSetting jarg1_);
  public final static native void GenerateSetting_rDuration_set(long jarg1, GenerateSetting jarg1_, long jarg2, Rational jarg2_);
  public final static native long GenerateSetting_rDuration_get(long jarg1, GenerateSetting jarg1_);
  public final static native long new_GenerateSetting();
  public final static native void delete_GenerateSetting(long jarg1);
  public final static native void delete_IGenerateObserver(long jarg1);
  public final static native void IGenerateObserver_onFinish(long jarg1, IGenerateObserver jarg1_, long jarg2, GenerateSetting jarg2_, int jarg3);
  public final static native void IGenerateObserver_onUpdateProcess(long jarg1, IGenerateObserver jarg1_, long jarg2, GenerateSetting jarg2_, long jarg3, Rational jarg3_);
  public final static native long new_IGenerateObserver();
  public final static native void IGenerateObserver_director_connect(IGenerateObserver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IGenerateObserver_change_ownership(IGenerateObserver obj, long cptr, boolean take_or_release);
  public final static native void PreviewFrame_path_set(long jarg1, PreviewFrame jarg1_, String jarg2);
  public final static native String PreviewFrame_path_get(long jarg1, PreviewFrame jarg1_);
  public final static native void PreviewFrame_rTimeOffset_set(long jarg1, PreviewFrame jarg1_, long jarg2, Rational jarg2_);
  public final static native long PreviewFrame_rTimeOffset_get(long jarg1, PreviewFrame jarg1_);
  public final static native long new_PreviewFrame();
  public final static native void delete_PreviewFrame(long jarg1);
  public final static native void delete_IPreview(long jarg1);
  public final static native long IPreview_getPreviewSize(long jarg1, IPreview jarg1_);
  public final static native int IPreview_getPreviewFrameCount(long jarg1, IPreview jarg1_);
  public final static native long IPreview_getPreviewFrame(long jarg1, IPreview jarg1_, int jarg2);
  public final static native long IPreview_getPreviewFrameNearBy(long jarg1, IPreview jarg1_, long jarg2, Rational jarg2_);
  public final static native void delete_IClip(long jarg1);
  public final static native long IClip_getId(long jarg1, IClip jarg1_);
  public final static native int IClip_getType(long jarg1, IClip jarg1_);
  public final static native long IClip_getRefMediaId(long jarg1, IClip jarg1_);
  public final static native long IClip_getOffsetOnTrack(long jarg1, IClip jarg1_);
  public final static native long IClip_getDuration(long jarg1, IClip jarg1_);
  public final static native long IClip_getOffsetInMedia(long jarg1, IClip jarg1_);
  public final static native void IClip_director_connect(IClip obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IClip_change_ownership(IClip obj, long cptr, boolean take_or_release);
  public final static native void delete_IAVClip(long jarg1);
  public final static native int IAVClip_getStreamIndex(long jarg1, IAVClip jarg1_);
  public final static native long IAVClip_dynamic_cast(long jarg1, IClip jarg1_);
  public final static native void delete_IImageClip(long jarg1);
  public final static native void delete_ISVGClip(long jarg1);
  public final static native void delete_IMedia(long jarg1);
  public final static native long IMedia_getId(long jarg1, IMedia jarg1_);
  public final static native String IMedia_getPath(long jarg1, IMedia jarg1_);
  public final static native int IMedia_getMediaType(long jarg1, IMedia jarg1_);
  public final static native long IMedia_newClip__SWIG_0(long jarg1, IMedia jarg1_);
  public final static native long IMedia_newClip__SWIG_1(long jarg1, IMedia jarg1_, long jarg2, Rational jarg2_);
  public final static native long IMedia_getPreview(long jarg1, IMedia jarg1_);
  public final static native long new_IMedia();
  public final static native void IMedia_director_connect(IMedia obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void IMedia_change_ownership(IMedia obj, long cptr, boolean take_or_release);
  public final static native void delete_IAVMedia(long jarg1);
  public final static native void IAVMedia_getMediaInfo(long jarg1, IAVMedia jarg1_, long jarg2, AVMediaInfo jarg2_);
  public final static native int IAVMedia_openPreviewSession(long jarg1, IAVMedia jarg1_);
  public final static native long IAVMedia_createPreviewFrame(long jarg1, IAVMedia jarg1_, int jarg2, long jarg3, Rational jarg3_);
  public final static native void IAVMedia_closePreviewSession(long jarg1, IAVMedia jarg1_);
  public final static native long IAVMedia_getPreview(long jarg1, IAVMedia jarg1_, int jarg2);
  public final static native long IAVMedia_newClip(long jarg1, IAVMedia jarg1_, int jarg2);
  public final static native long IAVMedia_dynamic_cast(long jarg1, IMedia jarg1_);
  public final static native void delete_IImageMedia(long jarg1);
  public final static native int IImageMedia_getImageType(long jarg1, IImageMedia jarg1_);
  public final static native long IImageMedia_getSize(long jarg1, IImageMedia jarg1_);
  public final static native void delete_ISVGMedia(long jarg1);
  public final static native String ISVGMedia_getSvg(long jarg1, ISVGMedia jarg1_);
  public final static native void delete_ITrackClipInfo(long jarg1);
  public final static native long ITrackClipInfo_getRefClipId(long jarg1, ITrackClipInfo jarg1_);
  public final static native long ITrackClipInfo_getOffsetOnTrack(long jarg1, ITrackClipInfo jarg1_);
  public final static native void delete_ITrack(long jarg1);
  public final static native long ITrack_getId(long jarg1, ITrack jarg1_);
  public final static native int ITrack_getTrackType(long jarg1, ITrack jarg1_);
  public final static native boolean ITrack_isDisabled(long jarg1, ITrack jarg1_);
  public final static native int ITrack_getClipCount(long jarg1, ITrack jarg1_);
  public final static native long ITrack_getClip(long jarg1, ITrack jarg1_, int jarg2);
  public final static native long ITrack_getClipById(long jarg1, ITrack jarg1_, long jarg2);
  public final static native long ITrack_getClipByOffset(long jarg1, ITrack jarg1_, long jarg2, Rational jarg2_);
  public final static native long ITrack_findClip(long jarg1, ITrack jarg1_, long jarg2, Rational jarg2_);
  public final static native boolean ITrack_hasClipOnOffset(long jarg1, ITrack jarg1_, long jarg2, Rational jarg2_);
  public final static native long ITrack_addClip(long jarg1, ITrack jarg1_, long jarg2, long jarg3, Rational jarg3_);
  public final static native int ITrack_splitClip(long jarg1, ITrack jarg1_, long jarg2, long jarg3, Rational jarg3_, IClip jarg4, IClip jarg5);
  public final static native int ITrack_moveClip(long jarg1, ITrack jarg1_, long jarg2, long jarg3, Rational jarg3_, long jarg4, IClip jarg5, IClip jarg6);
  public final static native int ITrack_changeClipDuration(long jarg1, ITrack jarg1_, long jarg2, long jarg3, Rational jarg3_);
  public final static native int ITrack_changeClipOffsetInMedia(long jarg1, ITrack jarg1_, long jarg2, long jarg3, Rational jarg3_);
  public final static native int ITrack_removeClip(long jarg1, ITrack jarg1_, int jarg2);
  public final static native int ITrack_removeClipById(long jarg1, ITrack jarg1_, long jarg2);
  public final static native void ITrack_removeAllClips(long jarg1, ITrack jarg1_);
  public final static native void ProjectSetting_eSampleFormat_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_eSampleFormat_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nBitsPerSample_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nBitsPerSample_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nSampleRate_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nSampleRate_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nChannelCount_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nChannelCount_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nChannelLayout_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nChannelLayout_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nWidth_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nWidth_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_nHeight_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_nHeight_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_rAspectRatio_set(long jarg1, ProjectSetting jarg1_, long jarg2, Rational jarg2_);
  public final static native long ProjectSetting_rAspectRatio_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_bInterlaced_set(long jarg1, ProjectSetting jarg1_, boolean jarg2);
  public final static native boolean ProjectSetting_bInterlaced_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_bTopFieldFirst_set(long jarg1, ProjectSetting jarg1_, boolean jarg2);
  public final static native boolean ProjectSetting_bTopFieldFirst_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_ePixFormat_set(long jarg1, ProjectSetting jarg1_, int jarg2);
  public final static native int ProjectSetting_ePixFormat_get(long jarg1, ProjectSetting jarg1_);
  public final static native void ProjectSetting_rFrameRate_set(long jarg1, ProjectSetting jarg1_, long jarg2, Rational jarg2_);
  public final static native long ProjectSetting_rFrameRate_get(long jarg1, ProjectSetting jarg1_);
  public final static native long new_ProjectSetting();
  public final static native void delete_ProjectSetting(long jarg1);
  public final static native void delete_IProject(long jarg1);
  public final static native int IProject_getVersion(long jarg1, IProject jarg1_);
  public final static native long IProject_getId(long jarg1, IProject jarg1_);
  public final static native String IProject_getName(long jarg1, IProject jarg1_);
  public final static native long IProject_getSetting(long jarg1, IProject jarg1_);
  public final static native void delete_IAction(long jarg1);
  public final static native int IAction_getActionType(long jarg1, IAction jarg1_);
  public final static native String IAction_getActionParam(long jarg1, IAction jarg1_, String jarg2);
  public final static native void delete_ITimeLineObserver(long jarg1);
  public final static native void ITimeLineObserver_onPosDidChanged(long jarg1, ITimeLineObserver jarg1_, long jarg2, Rational jarg2_);
  public final static native void ITimeLineObserver_onTrackCreated(long jarg1, ITimeLineObserver jarg1_, long jarg2, ITrack jarg2_);
  public final static native void ITimeLineObserver_onTrackRemoved(long jarg1, ITimeLineObserver jarg1_, long jarg2);
  public final static native void ITimeLineObserver_onTimeLineStatusChanged(long jarg1, ITimeLineObserver jarg1_, int jarg2);
  public final static native long new_ITimeLineObserver();
  public final static native void ITimeLineObserver_director_connect(ITimeLineObserver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ITimeLineObserver_change_ownership(ITimeLineObserver obj, long cptr, boolean take_or_release);
  public final static native void delete_ITimeLine(long jarg1);
  public final static native long ITimeLine_getEngine(long jarg1, ITimeLine jarg1_);
  public final static native int ITimeLine_getLastErrorCode(long jarg1, ITimeLine jarg1_);
  public final static native String ITimeLine_getLastErrorMessage(long jarg1, ITimeLine jarg1_);
  public final static native boolean ITimeLine_canRedo(long jarg1, ITimeLine jarg1_);
  public final static native boolean ITimeLine_canUndo(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_redo(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_undo(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_getCurrentPos(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_getDuration(long jarg1, ITimeLine jarg1_);
  public final static native int ITimeLine_getMediaCount(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_getMedia(long jarg1, ITimeLine jarg1_, int jarg2);
  public final static native long ITimeLine_getMediaById(long jarg1, ITimeLine jarg1_, long jarg2);
  public final static native long ITimeLine_addMedia(long jarg1, ITimeLine jarg1_, String jarg2);
  public final static native int ITimeLine_getTrackCount(long jarg1, ITimeLine jarg1_, int jarg2);
  public final static native long ITimeLine_getTrack__SWIG_0(long jarg1, ITimeLine jarg1_, int jarg2, int jarg3);
  public final static native long ITimeLine_getTrack__SWIG_1(long jarg1, ITimeLine jarg1_, long jarg2);
  public final static native long ITimeLine_newTrack(long jarg1, ITimeLine jarg1_, int jarg2);
  public final static native void ITimeLine_removeTrack__SWIG_0(long jarg1, ITimeLine jarg1_, long jarg2);
  public final static native void ITimeLine_removeTrack__SWIG_1(long jarg1, ITimeLine jarg1_, long jarg2, ITrack jarg2_);
  public final static native long ITimeLine_findClip(long jarg1, ITimeLine jarg1_, long jarg2);
  public final static native int ITimeLine_seek(long jarg1, ITimeLine jarg1_, long jarg2, Rational jarg2_);
  public final static native void ITimeLine_play(long jarg1, ITimeLine jarg1_);
  public final static native void ITimeLine_pause(long jarg1, ITimeLine jarg1_);
  public final static native void ITimeLine_addObserver(long jarg1, ITimeLine jarg1_, long jarg2, ITimeLineObserver jarg2_);
  public final static native void ITimeLine_removeObserver(long jarg1, ITimeLine jarg1_, long jarg2, ITimeLineObserver jarg2_);
  public final static native void ITimeLine_removeAllObservers(long jarg1, ITimeLine jarg1_);
  public final static native int ITimeLine_getRendererCount(long jarg1, ITimeLine jarg1_);
  public final static native long ITimeLine_getRenderer(long jarg1, ITimeLine jarg1_, int jarg2);
  public final static native void ITimeLine_addRenderer(long jarg1, ITimeLine jarg1_, long jarg2, IRenderer jarg2_);
  public final static native void ITimeLine_removeRenderer__SWIG_0(long jarg1, ITimeLine jarg1_, int jarg2);
  public final static native void ITimeLine_removeRenderer__SWIG_1(long jarg1, ITimeLine jarg1_, long jarg2, IRenderer jarg2_);
  public final static native void ITimeLine_removeAllRenderers(long jarg1, ITimeLine jarg1_);
  public final static native int ITimeLine_generate__SWIG_0(long jarg1, ITimeLine jarg1_, long jarg2, GenerateSetting jarg2_, long jarg3, IGenerateObserver jarg3_);
  public final static native int ITimeLine_generate__SWIG_1(long jarg1, ITimeLine jarg1_, long jarg2, GenerateSetting jarg2_);
  public final static native void ITimeLine_cancelGenerate(long jarg1, ITimeLine jarg1_);
  public final static native void ITimeLine_clear(long jarg1, ITimeLine jarg1_);
  public final static native void EngineSetting_cacheDir_set(long jarg1, EngineSetting jarg1_, String jarg2);
  public final static native String EngineSetting_cacheDir_get(long jarg1, EngineSetting jarg1_);
  public final static native void EngineSetting_logDir_set(long jarg1, EngineSetting jarg1_, String jarg2);
  public final static native String EngineSetting_logDir_get(long jarg1, EngineSetting jarg1_);
  public final static native void EngineSetting_previewFrameSize_set(long jarg1, EngineSetting jarg1_, long jarg2, GSize jarg2_);
  public final static native long EngineSetting_previewFrameSize_get(long jarg1, EngineSetting jarg1_);
  public final static native void EngineSetting_useGpuToDecode_set(long jarg1, EngineSetting jarg1_, boolean jarg2);
  public final static native boolean EngineSetting_useGpuToDecode_get(long jarg1, EngineSetting jarg1_);
  public final static native long new_EngineSetting();
  public final static native void delete_EngineSetting(long jarg1);
  public final static native void delete_IXEngine(long jarg1);
  public final static native long IXEngine_getSharedInstance();
  public final static native void IXEngine_destroySharedInstance();
  public final static native boolean IXEngine_checkIfGpuFasterThanCpu(String jarg1);
  public final static native int IXEngine_initialize(long jarg1, IXEngine jarg1_, long jarg2, EngineSetting jarg2_);
  public final static native long IXEngine_getEngineSetting(long jarg1, IXEngine jarg1_);
  public final static native int IXEngine_newProject__SWIG_0(long jarg1, IXEngine jarg1_, String jarg2, long jarg3, ProjectSetting jarg3_, int jarg4);
  public final static native int IXEngine_newProject__SWIG_1(long jarg1, IXEngine jarg1_, String jarg2, long jarg3, ProjectSetting jarg3_);
  public final static native long IXEngine_getCurrentProject(long jarg1, IXEngine jarg1_);
  public final static native int IXEngine_openProject(long jarg1, IXEngine jarg1_, long jarg2, IInputStream jarg2_);
  public final static native int IXEngine_saveProject(long jarg1, IXEngine jarg1_, long jarg2, IOutputStream jarg2_);
  public final static native int IXEngine_closeCurrentProject(long jarg1, IXEngine jarg1_);
  public final static native long IXEngine_getTimeLine(long jarg1, IXEngine jarg1_);
  public final static native void IXEngine_clearCaches(long jarg1, IXEngine jarg1_);
  public final static native void IXEngine_clearLogs(long jarg1, IXEngine jarg1_);
  public final static native long AudioStream_SWIGUpcast(long jarg1);
  public final static native long VideoStream_SWIGUpcast(long jarg1);
  public final static native long CThread_SWIGUpcast(long jarg1);
  public final static native long IVFrame_SWIGUpcast(long jarg1);
  public final static native long IAFrame_SWIGUpcast(long jarg1);
  public final static native long InputStream_SWIGUpcast(long jarg1);
  public final static native long IPacketStreamBase_SWIGUpcast(long jarg1);
  public final static native long IPictureStreamBase_SWIGUpcast(long jarg1);
  public final static native long IFrameStreamBase_SWIGUpcast(long jarg1);
  public final static native long IPacketStream_SWIGUpcast(long jarg1);
  public final static native long IFrameStream_SWIGUpcast(long jarg1);
  public final static native long IPictureStream_SWIGUpcast(long jarg1);
  public final static native long IVideoBuffer_SWIGUpcast(long jarg1);
  public final static native long IVideoRenderer_SWIGUpcast(long jarg1);
  public final static native long IAudioRenderer_SWIGUpcast(long jarg1);
  public final static native long CInputStream_SWIGUpcast(long jarg1);
  public final static native long COutputFileStream_SWIGUpcast(long jarg1);
  public final static native long VideoCodecParam_SWIGUpcast(long jarg1);
  public final static native long AudioCodecParam_SWIGUpcast(long jarg1);
  public final static native long IAVClip_SWIGUpcast(long jarg1);
  public final static native long IImageClip_SWIGUpcast(long jarg1);
  public final static native long ISVGClip_SWIGUpcast(long jarg1);
  public final static native long IAVMedia_SWIGUpcast(long jarg1);
  public final static native long IImageMedia_SWIGUpcast(long jarg1);
  public final static native long ISVGMedia_SWIGUpcast(long jarg1);

  public static void SwigDirector_ILogReceiver_Receive(ILogReceiver jself, int eLevel, String pStrLog) {
    jself.Receive(ELogLevel.swigToEnum(eLevel), pStrLog);
  }
  public static int SwigDirector_IBuffer_getType(IBuffer jself) {
    return (jself.getType()).swigValue();
  }
  public static int SwigDirector_IVideoBuffer_getType(IVideoBuffer jself) {
    return (jself.getType()).swigValue();
  }
  public static long SwigDirector_IVideoBuffer_getVideoRect(IVideoBuffer jself) {
    return GSize.getCPtr(jself.getVideoRect());
  }
  public static int SwigDirector_IVideoBuffer_getPixelFormat(IVideoBuffer jself) {
    return (jself.getPixelFormat()).swigValue();
  }
  public static int SwigDirector_IVideoBuffer_getLocation(IVideoBuffer jself) {
    return (jself.getLocation()).swigValue();
  }
  public static int SwigDirector_IVideoBuffer_getPlaneCount(IVideoBuffer jself) {
    return jself.getPlaneCount();
  }
  public static long SwigDirector_IVideoBuffer_getPlanePointer(IVideoBuffer jself, int nPlane) {
    return SWIGTYPE_p_unsigned_char.getCPtr(jself.getPlanePointer(nPlane));
  }
  public static int SwigDirector_IVideoBuffer_getPlaneLineSize(IVideoBuffer jself, int nPlane) {
    return jself.getPlaneLineSize(nPlane);
  }
  public static int SwigDirector_IVideoBuffer_getSize(IVideoBuffer jself, int nPlane) {
    return jself.getSize(nPlane);
  }
  public static int SwigDirector_IRenderer_render(IRenderer jself, long pBuffer) {
    return jself.render((pBuffer == 0) ? null : new IBuffer(pBuffer, false));
  }
  public static int SwigDirector_IVideoRenderer_render(IVideoRenderer jself, long pBuffer) {
    return jself.render((pBuffer == 0) ? null : new IBuffer(pBuffer, false));
  }
  public static int SwigDirector_IVideoRenderer_init(IVideoRenderer jself, int nWidth, int nHeight, int ePixFormat) {
    return jself.init(nWidth, nHeight, EPixFormat.swigToEnum(ePixFormat));
  }
  public static int SwigDirector_IAudioRenderer_render(IAudioRenderer jself, long pBuffer) {
    return jself.render((pBuffer == 0) ? null : new IBuffer(pBuffer, false));
  }
  public static int SwigDirector_IAudioRenderer_init(IAudioRenderer jself, int nChannel, int nSampleRate, int nBitsPerSample, int eSampleFormat) {
    return jself.init(nChannel, nSampleRate, nBitsPerSample, ESampleFormat.swigToEnum(eSampleFormat));
  }
  public static int SwigDirector_IInputStream_read(IInputStream jself, long buffer, int count) {
    return jself.read((buffer == 0) ? null : new SWIGTYPE_p_unsigned_char(buffer, false), count);
  }
  public static long SwigDirector_IInputStream_seek(IInputStream jself, long pos) {
    return jself.seek(pos);
  }
  public static long SwigDirector_IInputStream_available(IInputStream jself) {
    return jself.available();
  }
  public static long SwigDirector_IInputStream_skip(IInputStream jself, long n) {
    return jself.skip(n);
  }
  public static int SwigDirector_IInputStream_close(IInputStream jself) {
    return jself.close();
  }
  public static void SwigDirector_IObservable_addObserver(IObservable jself, long pObserver) {
    jself.addObserver((pObserver == 0) ? null : new IObserver(pObserver, false));
  }
  public static void SwigDirector_IObservable_deleteObserver(IObservable jself, long pObserver) {
    jself.deleteObserver((pObserver == 0) ? null : new IObserver(pObserver, false));
  }
  public static void SwigDirector_IObservable_deleteAllObservers(IObservable jself) {
    jself.deleteAllObservers();
  }
  public static int SwigDirector_IObservable_getObserverCount(IObservable jself) {
    return jself.getObserverCount();
  }
  public static long SwigDirector_IObservable_getObserver(IObservable jself, int index) {
    return IObserver.getCPtr(jself.getObserver(index));
  }
  public static void SwigDirector_IObservable_notifyAllObservers(IObservable jself) {
    jself.notifyAllObservers();
  }
  public static int SwigDirector_IOutputStream_write(IOutputStream jself, long buffer, int count) {
    return jself.write((buffer == 0) ? null : new SWIGTYPE_p_unsigned_char(buffer, false), count);
  }
  public static int SwigDirector_IOutputStream_flush(IOutputStream jself) {
    return jself.flush();
  }
  public static int SwigDirector_IOutputStream_close(IOutputStream jself) {
    return jself.close();
  }
  public static long SwigDirector_IOutputStream_seek(IOutputStream jself, long pos) {
    return jself.seek(pos);
  }
  public static void SwigDirector_IGenerateObserver_onFinish(IGenerateObserver jself, long param, int code) {
    jself.onFinish(new GenerateSetting(param, false), code);
  }
  public static void SwigDirector_IGenerateObserver_onUpdateProcess(IGenerateObserver jself, long param, long rDuration) {
    jself.onUpdateProcess(new GenerateSetting(param, false), new Rational(rDuration, true));
  }
  public static long SwigDirector_IClip_getId(IClip jself) {
    return jself.getId();
  }
  public static int SwigDirector_IClip_getType(IClip jself) {
    return (jself.getType()).swigValue();
  }
  public static long SwigDirector_IClip_getRefMediaId(IClip jself) {
    return jself.getRefMediaId();
  }
  public static long SwigDirector_IClip_getOffsetOnTrack(IClip jself) {
    return Rational.getCPtr(jself.getOffsetOnTrack());
  }
  public static long SwigDirector_IClip_getDuration(IClip jself) {
    return Rational.getCPtr(jself.getDuration());
  }
  public static long SwigDirector_IClip_getOffsetInMedia(IClip jself) {
    return Rational.getCPtr(jself.getOffsetInMedia());
  }
  public static long SwigDirector_IMedia_getId(IMedia jself) {
    return jself.getId();
  }
  public static String SwigDirector_IMedia_getPath(IMedia jself) {
    return jself.getPath();
  }
  public static int SwigDirector_IMedia_getMediaType(IMedia jself) {
    return (jself.getMediaType()).swigValue();
  }
  public static long SwigDirector_IMedia_newClip__SWIG_0(IMedia jself) {
    return IClip.getCPtr(jself.newClip());
  }
  public static long SwigDirector_IMedia_newClip__SWIG_1(IMedia jself, long rDuration) {
    return IClip.getCPtr(jself.newClip(new Rational(rDuration, true)));
  }
  public static long SwigDirector_IMedia_getPreview(IMedia jself) {
    return IPreview.getCPtr(jself.getPreview());
  }
  public static void SwigDirector_ITimeLineObserver_onPosDidChanged(ITimeLineObserver jself, long rNewPos) {
    jself.onPosDidChanged(new Rational(rNewPos, true));
  }
  public static void SwigDirector_ITimeLineObserver_onTrackCreated(ITimeLineObserver jself, long pTrack) {
    jself.onTrackCreated((pTrack == 0) ? null : new ITrack(pTrack, false));
  }
  public static void SwigDirector_ITimeLineObserver_onTrackRemoved(ITimeLineObserver jself, long trackId) {
    jself.onTrackRemoved(trackId);
  }
  public static void SwigDirector_ITimeLineObserver_onTimeLineStatusChanged(ITimeLineObserver jself, int newStatus) {
    jself.onTimeLineStatusChanged(ETimeLineStatus.swigToEnum(newStatus));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
