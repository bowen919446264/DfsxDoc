apply plugin: 'com.android.application'

Properties configProps = new Properties()
InputStream inputStream = new FileInputStream("config.properties")
configProps.load(inputStream)
inputStream.close()

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.2'
    defaultConfig {
        applicationId "com.ds.xedit.androidexsample"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang'
                cppFlags ""
                //abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                abiFilters 'arm64-v8a'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('XappKey.jks')
            keyAlias 'XappKey'
            storePassword 'dfsx.12345'
            keyPassword 'dfsx.12345'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            renderscriptDebuggable true
            jniDebuggable true
            jniDebuggable = true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    def runTasks = gradle.startParameter.taskNames.toString()
    def BUILD_TYPE
    if (runTasks.contains('Release')) {
        BUILD_TYPE = 'Release'
    } else {
        BUILD_TYPE = 'Debug'
    }

//    def nativeLibraryDirs = [configProps.getProperty('LIBAV_LIB_DIR') + "/Android/" + BUILD_TYPE,
//                             configProps.getProperty('LIBAV_LIB_DIR') + "/../third-part/lib/Android/" + BUILD_TYPE,
//                             configProps.getProperty('XEDIT_LIB_DIR') + "/Android/" + BUILD_TYPE,
//                             configProps.getProperty('XEDIT_LIB_DIR') + "/../third-part/lib/Android/" + BUILD_TYPE,
//                             configProps.getProperty('NLE_LIB_DIR') + "/Android/" + BUILD_TYPE,
//                             'libs']
    def nativeLibraryDirs = [configProps.getProperty('XEDIT_LIB_DIR') + "/Android/" + BUILD_TYPE,
                             configProps.getProperty('XEDIT_LIB_DIR') + "/../third-part/lib/Android/" + BUILD_TYPE,
                             'libs']

    sourceSets {
        main {
            jniLibs.srcDirs = nativeLibraryDirs
            java.srcDirs = ['src/main/java', configProps.getProperty('XEDIT_GEN_DIR') + "/java"]
        }
    }

    packagingOptions {
        if (BUILD_TYPE == 'Debug') {
            doNotStrip "*/armeabi/*.so"
            doNotStrip "*/armeabi-v7a/*.so"
            doNotStrip "*/arm64-v8a/*.so"
            doNotStrip "*/x86/*.so"
            doNotStrip "*/x86_64/*.so"
            doNotStrip "*/mips/*.so"
            doNotStrip "*/mips64/*.so"
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api 'com.android.support:appcompat-v7:26.+'
    api 'com.android.support.constraint:constraint-layout:1.0.2'
    api 'gun0912.ted:tedpermission:2.2.0'
    testImplementation 'junit:junit:4.12'
}
