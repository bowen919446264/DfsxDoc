apply plugin: 'com.android.library'

Properties configProps = new Properties()
InputStream inputStream = new FileInputStream("editengine/config.properties")
configProps.load(inputStream)
inputStream.close()

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags ""
                //abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    def runTasks = gradle.startParameter.taskNames.toString()
    println(runTasks)
    def BUILD_TYPE
    if (runTasks.contains('Release')) {
        BUILD_TYPE = 'Release'
    } else {
        BUILD_TYPE = 'Debug'
    }

    def nativeLibraryDirs = [configProps.getProperty('XEDIT_LIB_DIR') + "/Android/" + BUILD_TYPE,
                             configProps.getProperty('XEDIT_LIB_DIR') + "/../third-part/lib/Android/" + BUILD_TYPE,
                             'libs']

    sourceSets {
        main {
            jniLibs.srcDirs = nativeLibraryDirs
            java.srcDirs = ['src/main/java', configProps.getProperty('XEDIT_GEN_DIR') + "/java"]
        }
    }

    packagingOptions {
        if (BUILD_TYPE == 'Debug') {
            doNotStrip "*/armeabi/*.so"
            doNotStrip "*/armeabi-v7a/*.so"
            doNotStrip "*/arm64-v8a/*.so"
            doNotStrip "*/x86/*.so"
            doNotStrip "*/x86_64/*.so"
            doNotStrip "*/mips/*.so"
            doNotStrip "*/mips64/*.so"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            renderscriptDebuggable true
            jniDebuggable true
            jniDebuggable = true
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support.constraint:constraint-layout:1.1.3'
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.support_version
    compile 'gun0912.ted:tedpermission:2.2.0'
    testCompile 'junit:junit:4.12'
}
